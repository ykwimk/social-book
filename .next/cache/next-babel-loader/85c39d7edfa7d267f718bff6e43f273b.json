{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robin/www/social-book/client/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, MessageTwoTone, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport styled from 'styled-components';\nimport CommentForm from './CommentForm';\nvar PostCardWrap = styled.div(_templateObject());\n_c = PostCardWrap;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      isLiked = _useState[0],\n      setIsLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      isCommentForm = _useState2[0],\n      setIsCommentForm = _useState2[1];\n\n  var onClickToggleHeart = useCallback(function () {\n    setIsLiked(function (prev) {\n      return !prev;\n    });\n  }, [isLiked]);\n  var onClickToggleComment = useCallback(function () {\n    setIsCommentForm(function (prev) {\n      return !prev;\n    });\n  }, [isCommentForm]);\n  return /*#__PURE__*/_jsxDEV(PostCardWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isLiked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n          twoToneColor: \"#eb2f96\",\n          onClick: onClickToggleHeart\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n          onClick: onClickToggleHeart\n        }, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isCommentForm ? /*#__PURE__*/_jsxDEV(MessageTwoTone, {\n          onClick: onClickToggleComment\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, _this) : /*#__PURE__*/_jsxDEV(MessageOutlined, {\n          onClick: onClickToggleComment\n        }, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.user.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, _this)],\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        title: post.user.nickname,\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.user.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, _this),\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"Qg4ZYRHcLGMIRXcYVxUKCzspwLw=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostCardWrap\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["/Users/robin/www/social-book/client/components/PostCard.js"],"names":["React","useCallback","useState","PropTypes","Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","MessageTwoTone","RetweetOutlined","useSelector","PostImages","styled","CommentForm","PostCardWrap","div","PostCard","post","id","state","user","me","isLiked","setIsLiked","isCommentForm","setIsCommentForm","onClickToggleHeart","prev","onClickToggleComment","images","nickname","content","propTypes","shape","number","object","string","createdAt","comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Button, Card, Popover } from 'antd';\nimport {\n  EllipsisOutlined, HeartOutlined, HeartTwoTone,\n  MessageOutlined, MessageTwoTone, RetweetOutlined\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport styled from 'styled-components';\nimport CommentForm from './CommentForm';\n\nconst PostCardWrap = styled.div`\n  margin-bottom: 20px;\n`\n\nconst PostCard = ({ post }) => {\n  const id = useSelector(state => state.user.me?.id)\n  const [ isLiked, setIsLiked ] = useState(false)\n  const [ isCommentForm, setIsCommentForm ] = useState(false)\n\n  const onClickToggleHeart = useCallback(() => {\n    setIsLiked(prev => !prev)\n  }, [isLiked])\n\n  const onClickToggleComment = useCallback(() => {\n    setIsCommentForm(prev => !prev)\n  }, [isCommentForm])\n\n  return (\n    <PostCardWrap >\n      <Card\n        cover={post.images[0] && <PostImages images={post.images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          <>\n            {isLiked\n              ? <HeartTwoTone\n                  key=\"heart\"\n                  twoToneColor=\"#eb2f96\"\n                  onClick={onClickToggleHeart}\n                />\n              : <HeartOutlined\n                  key=\"heart\"\n                  onClick={onClickToggleHeart}\n                />\n            }\n          </>\n          ,\n          <>\n            {isCommentForm\n              ? <MessageTwoTone\n                  key=\"comment\"\n                  onClick={onClickToggleComment}\n                />\n              : <MessageOutlined\n                  key=\"comment\"\n                  onClick={onClickToggleComment}\n                />\n            }\n          </>\n          ,\n          <Popover key=\"more\" content={(\n            <Button.Group>\n              {id && post.user.id === id ? (\n                <>\n                  <Button type=\"primary\">수정</Button>\n                  <Button type=\"danger\">삭제</Button>\n                </>\n              ) : <Button>신고</Button>}\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>\n        ]}\n      >\n        <Card.Meta\n          title={post.user.nickname}\n          avatar={<Avatar>{post.user.nickname[0]}</Avatar>}\n          description={post.content}\n        />\n        <Button></Button>\n      </Card>\n      <CommentForm />\n      {/* <CommentForm />\n      <Comments /> */}\n    </PostCardWrap>\n  )\n}\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}