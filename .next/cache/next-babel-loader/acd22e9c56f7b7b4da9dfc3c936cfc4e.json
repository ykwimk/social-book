{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robin/www/social-book/client/components/PostForm.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nconst PostFormWrap = styled(Form).withConfig({\n  displayName: \"PostForm__PostFormWrap\",\n  componentId: \"xlsdo7-0\"\n})([\"margin:10px 0 20px;\"]);\nconst PostFeedButton = styled(Button).withConfig({\n  displayName: \"PostForm__PostFeedButton\",\n  componentId: \"xlsdo7-1\"\n})([\"float:right;\"]);\nconst PostImage = styled.div.withConfig({\n  displayName: \"PostForm__PostImage\",\n  componentId: \"xlsdo7-2\"\n})([\"display:inline-block;\"]);\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    const {\n      value\n    } = e.target;\n    setText(value);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PostFormWrap, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: e => onChangeText(e),\n      maxLength: 140,\n      placeholder: \"\\uC77C\\uC0C1\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostFeedButton, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uAC8C\\uC2DC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(i => /*#__PURE__*/_jsxDEV(PostImage, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: i,\n          style: {\n            width: '200px'\n          },\n          alt: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/robin/www/social-book/client/components/PostForm.js"],"names":["React","useCallback","useRef","useState","Button","Form","Input","styled","useDispatch","useSelector","addPost","PostFormWrap","PostFeedButton","PostImage","div","PostForm","imagePaths","state","post","dispatch","imageInput","text","setText","onChangeText","e","value","target","onClickImageUpload","current","click","onSubmit","map","i","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostFormWrap = styled(Form)`\n  margin: 10px 0 20px;\n`\n\nconst PostFeedButton = styled(Button)`\n  float: right;\n`\n\nconst PostImage = styled.div`\n  display: inline-block;\n`\n\nconst PostForm = () => {\n  const { imagePaths } = useSelector(state => state.post)\n  const dispatch = useDispatch()\n  const imageInput = useRef()\n  const [ text, setText ] = useState('')\n\n  const onChangeText = useCallback((e) => {\n    const { value } = e.target\n    setText(value)\n  }, [])\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click()\n  }, [imageInput.current])\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost)\n  }, [])\n\n  return (\n    <PostFormWrap encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={(e) => onChangeText(e)}\n        maxLength={140}\n        placeholder=\"일상을 적어주세요.\"\n      />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <PostFeedButton type=\"primary\" htmlType=\"submit\">\n          게시하기\n        </PostFeedButton>\n      </div>\n      <div>\n        {imagePaths.map(i =>\n          <PostImage key={i}>\n            <img src={i} style={{ width: '200px' }} alt={i} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </PostImage>\n        )}\n      </div>\n    </PostFormWrap>\n  )\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}