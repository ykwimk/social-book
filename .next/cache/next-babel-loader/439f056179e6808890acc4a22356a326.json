{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const enhancer = false;\n  const middleware = [] ? compose(applyMiddleware(...middleware)) : composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NAME',\n    data: 'bb'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/robin/www/social-book/client/stores/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","enhancer","middleware","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,QAAQ,QAAd;AACE,QAAMC,UAAU,GAAG,KACjBN,OAAO,CAACD,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CADU,GAEjBJ,mBAAmB,CAACH,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAFrB;AAGF,QAAMC,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUE,QAAV,CAAzB;AACAE,EAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE,aADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;AAIA,SAAOH,KAAP;AACD,CAXD;;AAaA,MAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const enhancer = process.env.NODE_ENV === 'production'\n    const middleware = []\n    ? compose(applyMiddleware(...middleware))\n    : composeWithDevTools(applyMiddleware(...middleware))\n  const store = createStore(reducer, enhancer)\n  store.dispatch({\n    type: 'CHANGE_NAME',\n    data: 'bb'\n  })\n  return store\n}\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n})\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}