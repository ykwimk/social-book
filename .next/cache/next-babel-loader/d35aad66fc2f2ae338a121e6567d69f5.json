{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robin/www/social-book/client/components/LoginForm.js\";\nimport React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nconst ButtonWrap = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrap\",\n  componentId: \"sc-1g1j5p0-0\"\n})([\"margin-top:10px;\"]);\nconst FormWrap = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrap\",\n  componentId: \"sc-1g1j5p0-1\"\n})([\"padding:10px;\"]);\n\nconst LoginForm = ({\n  setIsLogin\n}) => {\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const onChangeValue = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'id') setId(value);else if (name === 'password') setPassword(value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    setIsLogin(true);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(FormWrap, {\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"id\",\n        value: id,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        onChange: e => onChangeValue(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        onChange: e => onChangeValue(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nLoginForm.propTypes = {\n  setIsLogin: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/robin/www/social-book/client/components/LoginForm.js"],"names":["React","useCallback","useState","useMemo","PropTypes","Button","Form","Input","Link","styled","ButtonWrap","div","FormWrap","LoginForm","setIsLogin","id","setId","password","setPassword","onChangeValue","e","name","value","target","onSubmit","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,wBAAhB;AAIA,MAAMC,QAAQ,GAAGH,MAAM,CAACH,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAd;;AAIA,MAAMO,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM;AAAA,OAAEC,EAAF;AAAA,OAAMC;AAAN,MAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAA,OAAEe,QAAF;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMiB,aAAa,GAAGlB,WAAW,CAAEmB,CAAD,IAAO;AACvC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACA,QAAIF,IAAI,KAAK,IAAb,EAAmBL,KAAK,CAACM,KAAD,CAAL,CAAnB,KACK,IAAID,IAAI,KAAK,UAAb,EAAyBH,WAAW,CAACI,KAAD,CAAX;AAC/B,GAJgC,EAI9B,EAJ8B,CAAjC;AAMA,QAAME,QAAQ,GAAGvB,WAAW,CAAC,MAAM;AACjCa,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAF2B,EAEzB,CAACC,EAAD,EAAKE,QAAL,CAFyB,CAA5B;AAIA,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEO,QAApB;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,KAAK,EAAET,EAHT;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,QAAQ,EAAGK,CAAD,IAAOD,aAAa,CAACC,CAAD,CALhC;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEH,QAHT;AAIE,QAAA,WAAW,EAAC,0BAJd;AAKE,QAAA,QAAQ,EAAGG,CAAD,IAAOD,aAAa,CAACC,CAAD,CALhC;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,UAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,OAAO,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA,+BACE;AAAA,iCAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAhDD;;AAkDAP,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,UAAU,EAAEV,SAAS,CAACsB,IAAV,CAAeC;AADP,CAAtB;AAIA,eAAed,SAAf","sourcesContent":["import React, { useCallback, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nconst ButtonWrap = styled.div`\n  margin-top: 10px;\n`\n\nconst FormWrap = styled(Form)`\n  padding: 10px;\n`\n\nconst LoginForm = ({ setIsLogin }) => {\n  const [ id, setId ] = useState('')\n  const [ password, setPassword ] = useState('')\n\n  const onChangeValue = useCallback((e) => {\n    const { name, value } = e.target\n    if (name === 'id') setId(value)\n    else if (name === 'password') setPassword(value)\n  }, [])\n\n  const onSubmit = useCallback(() => {\n    setIsLogin(true)\n  }, [id, password])\n\n  return (\n    <FormWrap onFinish={onSubmit}>\n      <div>\n        <Input\n          type=\"text\"\n          name=\"id\"\n          value={id}\n          placeholder=\"아이디\"\n          onChange={(e) => onChangeValue(e)}\n          required\n        />\n      </div>\n      <div>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          placeholder=\"비밀번호\"\n          onChange={(e) => onChangeValue(e)}\n          required\n        />\n      </div>\n      <ButtonWrap>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={false}\n        >로그인</Button>\n        <Link href=\"signup\">\n          <a><Button>회원가입</Button></a>\n        </Link>\n      </ButtonWrap>\n    </FormWrap>\n  )\n}\n\nLoginForm.propTypes = {\n  setIsLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}