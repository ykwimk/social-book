{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  name: 'ykwimk',\n  age: 32,\n  password: 'aa'\n};\nconst changeName = {\n  type: 'CHANGE_NAME',\n  data: 'bb'\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/robin/www/social-book/client/reducers/index.js"],"names":["initialState","name","age","password","changeName","type","data","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,QADa;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;AAMA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE,aADW;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAAnB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAK,aAAL;AACE,6CACKG,KADL;AAEEP,QAAAA,IAAI,EAAEQ,MAAM,CAACH;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeC,WAAf","sourcesContent":["const initialState = {\n  name: 'ykwimk',\n  age: 32,\n  password: 'aa'\n}\n\nconst changeName = {\n  type: 'CHANGE_NAME',\n  data: 'bb'\n}\n\nconst rootReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'CHANGE_NAME':\n      return {\n        ...state,\n        name: action.data\n      }\n  }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}